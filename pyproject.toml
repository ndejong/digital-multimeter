
[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "digital-multimeter"
version = "0.5.1"
description = "Digital Multimeter provides both a CLI interface and a Python API interface to receive data from a variety of digital multimeters."
authors = ["Nicholas de Jong <contact@nicholasdejong.com>"]
license = "BSD-2-Clause"
readme = "readme.md"
packages = [{ include = "digital_multimeter", from = "src" }]
classifiers = ["Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "Programming Language :: Python :: 3", "License :: OSI Approved :: BSD License"]
keywords = ["multimeter", "digital multimeter", "dmm", "Digitech", "Digitek", "TekPower", "UniTrend", "Voltcraft"]

[tool.poetry.urls]
Documentation = "https://digital-multimeter.readthedocs.io/en/latest/"
Homepage = "https://digital-multimeter.readthedocs.io/en/latest/"
Repository = "https://github.com/ndejong/digital-multimeter.git"
"Bug Tracker" = "https://github.com/ndejong/digital-multimeter/issues"

[tool.poetry.scripts]
dmm = "digital_multimeter.cli.entrypoints:dmm"

[tool.poetry.dependencies]
python = "^3.5"
click = ">=7.0.0,<9.0.0"    # https://pypi.org/project/click/#history
pyserial = ">=3.0.0,<4.0.0" # https://pypi.org/project/pyserial/#history
pyusb = ">=1.0.0,<2.0.0"    # https://pypi.org/project/pyusb/#history

[tool.poetry.dev-dependencies]
black = "^23.3"             # https://pypi.org/project/black/#history
flake8 = "^6.0"             # https://pypi.org/project/flake8/#history
isort = "^5.12"             # https://pypi.org/project/isort/#history
pytest = "^7.3"             # https://pypi.org/project/pytest/#history
safety = "2.4.0b1"          # https://pypi.org/project/safety/#history
mkdocs = "^1.4"             # https://pypi.org/project/mkdocs/#history
mkdocs-material = "^9.1"    # https://pypi.org/project/mkdocs-material/#history
novella = "^0.2"            # https://pypi.org/project/novella/#history
pydoc-markdown = "^4.6"     # https://pypi.org/project/pydoc-markdown/#history

[tool.poetry.plugins."slap.plugins.repository_ci"]
github-actions = "slap.ext.repository_ci.github_actions:GithubActionsRepositoryCIPlugin"

[tool.poetry.plugins."slap.plugins.check"]
changelog = "slap.ext.checks.changelog:ChangelogValidationCheckPlugin"
general = "slap.ext.checks.general:GeneralChecksPlugin"
poetry = "slap.ext.checks.poetry:PoetryChecksPlugin"
release = "slap.ext.checks.release:ReleaseChecksPlugin"

[tool.slap]
typed = false
release.branch = "dev"

[tool.slap.test]
pytest = "pytest tests/ -vv"
check = "slap check"
isort = "isort src/ tests/ --check-only"
black = "black src/ tests/ --check"
flake8 = "flake8 src/ tests/"
safety = "pip freeze | safety check --stdin --output=text"

[tool.slap.run]
format = "black src/ tests/ && isort src/ tests/"
docs-build = "cd docs && novella --base-url digital-multimeter/"
docs-server = "cd docs && novella --serve"

[tool.isort]
profile = "black"
line_length = 120
combine_as_imports = true

[tool.black]
line-length = 120

[tool.readthedocs-custom-steps]
script = """
novella --site-dir _site/html
"""
